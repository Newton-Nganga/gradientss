{"ast":null,"code":"import tinycolor from 'tinycolor2';\nexport default function useGenerateGradients(num) {\n  const grad = [];\n  for (let n = 0; n < num; n++) {\n    const color1 = tinycolor.random();\n    const color2 = tinycolor.random();\n    const colors = [color1, color2];\n\n    //sort colors by hue\n    colors.sort((a, b) => a.toHsl().h - b.toHsl().h);\n\n    //calculate the step size for each color \n    const steps = colors.map((color, index) => {\n      const nextColor = colors[index + 1] || colors[1];\n      return {\n        color,\n        step: (nextColor.toHsl().h - color.toHsl().h) / 100\n      };\n    });\n\n    //generate gradient\n    let gradient = '';\n    for (let i = 0; i <= 100; i++) {\n      const {\n        color,\n        step\n      } = steps.find(step => i <= step.step * 100);\n      console.log('step', step);\n      const hsl = color.toHsl();\n      hsl.h += step * i;\n      gradient += `${tinycolor(hsl).toHexString()}`;\n    }\n    grad.push(gradient);\n  }\n  return grad; //an array of gradients\n}","map":{"version":3,"names":["tinycolor","useGenerateGradients","num","grad","n","color1","random","color2","colors","sort","a","b","toHsl","h","steps","map","color","index","nextColor","step","gradient","i","find","console","log","hsl","toHexString","push"],"sources":["/home/newton_nganga/Development/Projects/Reactjs-sites/gradient/src/Utils/useGenerateGradients.js"],"sourcesContent":["import tinycolor from 'tinycolor2'\n\nexport default function useGenerateGradients(num){\n\n   const grad = []\n   for(let n = 0 ; n<num ;n++){\n    const color1 = tinycolor.random()\n    const color2 = tinycolor.random()\n\n    const colors = [color1,color2]\n\n    //sort colors by hue\n    colors.sort((a,b)=> a.toHsl().h - b.toHsl().h)\n\n     //calculate the step size for each color \n    const steps = colors.map((color,index)=>{\n       const nextColor = colors[index+1] || colors[1]\n       return{\n        color,step:(nextColor.toHsl().h - color.toHsl().h)/100,\n       }\n    })\n\n   //generate gradient\n   let gradient = ''\n   for (let i = 0; i <= 100 ; i++ ){\n    const {color,step} = steps.find((step)=> i <= step.step * 100)\n    console.log('step',step)\n    const hsl = color.toHsl();\n    hsl.h += step*i;\n    gradient += `${tinycolor(hsl).toHexString()}`\n   }\n   grad.push(gradient)\n  }\n\n  return grad   //an array of gradients\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,YAAY;AAElC,eAAe,SAASC,oBAAoB,CAACC,GAAG,EAAC;EAE9C,MAAMC,IAAI,GAAG,EAAE;EACf,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAGA,CAAC,GAACF,GAAG,EAAEE,CAAC,EAAE,EAAC;IAC1B,MAAMC,MAAM,GAAGL,SAAS,CAACM,MAAM,EAAE;IACjC,MAAMC,MAAM,GAAGP,SAAS,CAACM,MAAM,EAAE;IAEjC,MAAME,MAAM,GAAG,CAACH,MAAM,EAACE,MAAM,CAAC;;IAE9B;IACAC,MAAM,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAID,CAAC,CAACE,KAAK,EAAE,CAACC,CAAC,GAAGF,CAAC,CAACC,KAAK,EAAE,CAACC,CAAC,CAAC;;IAE7C;IACD,MAAMC,KAAK,GAAGN,MAAM,CAACO,GAAG,CAAC,CAACC,KAAK,EAACC,KAAK,KAAG;MACrC,MAAMC,SAAS,GAAGV,MAAM,CAACS,KAAK,GAAC,CAAC,CAAC,IAAIT,MAAM,CAAC,CAAC,CAAC;MAC9C,OAAM;QACLQ,KAAK;QAACG,IAAI,EAAC,CAACD,SAAS,CAACN,KAAK,EAAE,CAACC,CAAC,GAAGG,KAAK,CAACJ,KAAK,EAAE,CAACC,CAAC,IAAE;MACpD,CAAC;IACJ,CAAC,CAAC;;IAEH;IACA,IAAIO,QAAQ,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,GAAG,EAAGA,CAAC,EAAE,EAAE;MAC/B,MAAM;QAACL,KAAK;QAACG;MAAI,CAAC,GAAGL,KAAK,CAACQ,IAAI,CAAEH,IAAI,IAAIE,CAAC,IAAIF,IAAI,CAACA,IAAI,GAAG,GAAG,CAAC;MAC9DI,OAAO,CAACC,GAAG,CAAC,MAAM,EAACL,IAAI,CAAC;MACxB,MAAMM,GAAG,GAAGT,KAAK,CAACJ,KAAK,EAAE;MACzBa,GAAG,CAACZ,CAAC,IAAIM,IAAI,GAACE,CAAC;MACfD,QAAQ,IAAK,GAAEpB,SAAS,CAACyB,GAAG,CAAC,CAACC,WAAW,EAAG,EAAC;IAC9C;IACAvB,IAAI,CAACwB,IAAI,CAACP,QAAQ,CAAC;EACpB;EAEA,OAAOjB,IAAI,EAAG;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}