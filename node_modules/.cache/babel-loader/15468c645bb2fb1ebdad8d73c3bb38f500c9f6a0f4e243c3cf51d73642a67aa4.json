{"ast":null,"code":"import tinycolor from 'tinycolor2';\nexport default function useGenerateGradients() {\n  const grad = [];\n  for (let i = 0; i < num; i++) {\n    const color1 = tinycolor.random().toString();\n\n    // Generate a tint or shade of the base color\n    const isTint = Math.random() >= 0.5; // Randomly determine whether to generate a tint or shade\n    const variationAmount = Math.floor(Math.random() * 30) + 10; // Randomly choose the amount of variation\n    const color2 = isTint ? tinycolor(color1).lighten(variationAmount).toString() : tinycolor(color1).darken(variationAmount).toString();\n    const directions = [\"to right\", \"to left\", \"to bottom\", \"to top\"];\n    const direction = directions[Math.floor(Math.random() * directions.length)];\n    // Create the CSS linear gradient string\n    const gradient = `linear-gradient(${direction}, ${color1}, ${color2})`;\n\n    // Return the gradient\n    grad.push(gradient);\n  }\n  return {\n    grad\n  }; //an array of gradients\n}","map":{"version":3,"names":["tinycolor","useGenerateGradients","grad","i","num","color1","random","toString","isTint","Math","variationAmount","floor","color2","lighten","darken","directions","direction","length","gradient","push"],"sources":["/home/newton_nganga/Development/Projects/Reactjs-sites/gradient/src/Utils/useGenerateGradients.js"],"sourcesContent":["import tinycolor from 'tinycolor2'\n\nexport default function useGenerateGradients(){\n   const grad =[]\n    for(let i = 0; i< num;i++){\n   \n      const color1 = tinycolor.random().toString();\n\n      // Generate a tint or shade of the base color\n      const isTint = Math.random() >= 0.5; // Randomly determine whether to generate a tint or shade\n      const variationAmount = Math.floor(Math.random() * 30) + 10; // Randomly choose the amount of variation\n      const color2 = isTint\n        ? tinycolor(color1).lighten(variationAmount).toString()\n        : tinycolor(color1).darken(variationAmount).toString();\n\n      const directions = [\"to right\",\"to left\",\"to bottom\", \"to top\"]\n      const direction = directions[Math.floor(Math.random()*directions.length)]\n      // Create the CSS linear gradient string\n      const gradient = `linear-gradient(${direction}, ${color1}, ${color2})`;\n    \n      // Return the gradient\n      grad.push(gradient)\n    }\n  return {grad}   //an array of gradients\n}\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,YAAY;AAElC,eAAe,SAASC,oBAAoB,GAAE;EAC3C,MAAMC,IAAI,GAAE,EAAE;EACb,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAEC,GAAG,EAACD,CAAC,EAAE,EAAC;IAExB,MAAME,MAAM,GAAGL,SAAS,CAACM,MAAM,EAAE,CAACC,QAAQ,EAAE;;IAE5C;IACA,MAAMC,MAAM,GAAGC,IAAI,CAACH,MAAM,EAAE,IAAI,GAAG,CAAC,CAAC;IACrC,MAAMI,eAAe,GAAGD,IAAI,CAACE,KAAK,CAACF,IAAI,CAACH,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;IAC7D,MAAMM,MAAM,GAAGJ,MAAM,GACjBR,SAAS,CAACK,MAAM,CAAC,CAACQ,OAAO,CAACH,eAAe,CAAC,CAACH,QAAQ,EAAE,GACrDP,SAAS,CAACK,MAAM,CAAC,CAACS,MAAM,CAACJ,eAAe,CAAC,CAACH,QAAQ,EAAE;IAExD,MAAMQ,UAAU,GAAG,CAAC,UAAU,EAAC,SAAS,EAAC,WAAW,EAAE,QAAQ,CAAC;IAC/D,MAAMC,SAAS,GAAGD,UAAU,CAACN,IAAI,CAACE,KAAK,CAACF,IAAI,CAACH,MAAM,EAAE,GAACS,UAAU,CAACE,MAAM,CAAC,CAAC;IACzE;IACA,MAAMC,QAAQ,GAAI,mBAAkBF,SAAU,KAAIX,MAAO,KAAIO,MAAO,GAAE;;IAEtE;IACAV,IAAI,CAACiB,IAAI,CAACD,QAAQ,CAAC;EACrB;EACF,OAAO;IAAChB;EAAI,CAAC,EAAG;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}